spring:
  shardingsphere:
    datasource: # 配置数据源
      names: m1,m2,m0 # 分库的逻辑库名,可配置多个
      # 配置数据源的具体内容，包含连接池，驱动，地址，用户名，密码
      m1: # 逻辑库名
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/edu_db_1?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        username: root
        password: 123456
      # 配置数据源的具体内容，包含连接池，驱动，地址，用户名，密码
      m2: # 逻辑库名
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/edu_db_2?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        username: root
        password: 123456
      # 配置数据源的具体内容，包含连接池，驱动，地址，用户名，密码
      m0: # 逻辑库名
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/user_db?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        username: root
        password: 123456
    sharding:
      tables:
        t_user:
          # 配置user_db数据库里面t_user  专库专表
          actual-data-nodes: m0.t_user
          table-strategy: #分表策略
            inline:
              sharding-column: user_id #分片路由标准
              algorithm-expression: t_user #分片算法表达式
          key-generator:
            column: user_id
            type: MyKeyGenerator
    props:
      sql:
        show: true # 开启sql日志输出

